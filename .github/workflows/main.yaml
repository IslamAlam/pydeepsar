---
name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-main-tests-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: pydeepsar
          auto-update-conda: true
          conda-solver: libmamba

      - name: Check poetry.lock
        run: poetry check

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run tests
        run: |
          makim tests.unit

      - name: Run style checks
        run: |
          pre-commit install
          makim tests.linter

      # - name: Semantic Release PR Title Check
      #   uses: osl-incubator/semantic-release-pr-title-check@v1.4.3
      #   if: success() || failure()
      #   with:
      #     convention-name: conventionalcommits

  # smoke-test:
  #   runs-on: ubuntu-latest
  #   concurrency:
  #     group: ci-main-smoke-${{ matrix.smoke_file }}-${{ github.ref }}
  #     cancel-in-progress: true

  #   defaults:
  #     run:
  #       shell: bash -l {0}

  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: conda-incubator/setup-miniconda@v3
  #       with:
  #         miniforge-version: latest
  #         environment-file: conda/dev.yaml
  #         channels: conda-forge,nodefaults
  #         activate-environment: pydeepsar
  #         auto-update-conda: true
  #         conda-solver: libmamba

  #     - name: Install dependencies
  #       run: poetry install

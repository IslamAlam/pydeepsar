Search.setIndex({"docnames": ["api/index", "api/pydeepsar/__main__/index", "api/pydeepsar/cli/index", "api/pydeepsar/index", "api/pydeepsar/io/index", "api/pydeepsar/io/xr/index", "api/pydeepsar/models/coherene/index", "api/pydeepsar/models/index", "api/pydeepsar/models/layers/index", "api/pydeepsar/pydeepsar/index", "api/pydeepsar/util/callback/index", "api/pydeepsar/util/index", "api/pydeepsar/util/plot/index", "changelog", "contributing", "index", "installation", "readme"], "filenames": ["api/index.rst", "api/pydeepsar/__main__/index.rst", "api/pydeepsar/cli/index.rst", "api/pydeepsar/index.rst", "api/pydeepsar/io/index.rst", "api/pydeepsar/io/xr/index.rst", "api/pydeepsar/models/coherene/index.rst", "api/pydeepsar/models/index.rst", "api/pydeepsar/models/layers/index.rst", "api/pydeepsar/pydeepsar/index.rst", "api/pydeepsar/util/callback/index.rst", "api/pydeepsar/util/index.rst", "api/pydeepsar/util/plot/index.rst", "changelog.md", "contributing.md", "index.rst", "installation.md", "readme.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.cli</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.io.xr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.models.coherene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.models.layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.pydeepsar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.util.callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydeepsar.util.plot</span></code>", "Release Notes", "Contributing", "Welcome to DeepSAR Python package\u2019s documentation!", "Installation", "DeepSAR Python package"], "terms": {"thi": [0, 1, 5, 6, 8, 10, 14, 16, 17], "page": [0, 15], "contain": [0, 5, 6, 8, 10], "auto": 0, "gener": [0, 8, 14, 17], "document": [0, 17], "1": [0, 5, 6, 8], "pydeepsar": [0, 14, 15, 16, 17], "io": [0, 3, 10, 17], "xr": [0, 3, 4], "model": [0, 3, 10], "coheren": [0, 3, 7], "layer": [0, 3, 6, 7, 10], "util": [0, 3], "callback": [0, 3, 11], "plot": [0, 3, 6, 10, 11], "__main__": [0, 3], "cli": [0, 3], "creat": [0, 5, 6, 12, 14, 17], "sphinx": 0, "autoapi": 0, "entrypoint": 1, "modul": [1, 4, 7, 9, 11, 15], "case": 1, "you": [1, 14, 16], "us": [1, 6, 8, 10, 14], "python": [1, 2, 3, 10, 14, 16], "m": [1, 10, 14], "why": 1, "doe": 1, "file": [1, 5, 14], "exist": 1, "For": [1, 14], "more": [1, 14], "info": 1, "read": [1, 5], "http": [1, 14, 16, 17], "www": 1, "org": [1, 14], "dev": 1, "pep": 1, "0338": 1, "doc": [1, 14], "2": [1, 5, 6, 8], "cmdline": 1, "html": 1, "cmdoption": 1, "3": [1, 5, 6, 8, 14], "command": [2, 16], "updat": [2, 5, 14], "train": [2, 10, 11], "infer": 2, "main": [2, 9, 16], "option": [2, 5, 6, 8, 10, 12, 14], "str": [2, 3, 5, 6, 8, 10, 12], "none": [2, 5, 6, 8, 10, 12], "your": [2, 14, 16], "logic": 2, "here": [2, 14], "deepsar": [3, 14, 16], "get_vers": 3, "return": [3, 5, 6, 8, 10, 12], "program": 3, "version": [3, 14], "__version__": 3, "__author__": 3, "islam": 3, "mansour": 3, "__email__": 3, "is3mansour": 3, "gmail": 3, "com": [3, 14, 16], "manag": [4, 5, 14], "geospati": [4, 5], "data": [4, 5, 6, 8, 10, 12], "tandem": 5, "x": [5, 6, 8, 12], "provid": [5, 6, 8, 10, 12], "from": [5, 6, 10, 15], "netcdf": 5, "tandemxdata": 5, "geonetcdfdataread": 5, "update_dataset_with_datafram": 5, "origin": [5, 14], "dataset": [5, 10], "new": [5, 12, 14], "variabl": [5, 8], "datafram": [5, 6], "slice_middle_port": 5, "slice": 5, "middl": 5, "portion": 5, "an": [5, 6, 14], "xarrai": 5, "along": 5, "both": 5, "y": [5, 6, 8, 10, 12], "dimens": 5, "exampl": [5, 6, 8, 10], "import": [5, 6, 8, 10, 14], "tandemx_geodata": 5, "tg": 5, "initi": 5, "access": 5, "dem": 5, "tandem_root": 5, "summit_east_coast_2017": 5, "tandem_data": 5, "dem_fil": 5, "get_dem_fil": 5, "print": [5, 8, 10], "path": [5, 10], "dem_file1": 5, "nc": 5, "dem_file2": 5, "netcdf_file_path": 5, "netcdf_fil": 5, "reader": 5, "d": [5, 10], "read_netcdf": 5, "lat": 5, "100": 5, "lon": 5, "coordin": 5, "float32": [5, 8, 12], "180": 5, "0": [5, 6, 8], "179": 5, "178": 5, "177": 5, "81": 5, "9": [5, 6, 8, 14], "80": 5, "90": 5, "89": 5, "88": 5, "87": 5, "8": [5, 6, 8], "panda": [5, 6, 10], "pd": [5, 6], "numpi": [5, 6, 8, 10, 12], "np": [5, 6, 8, 10], "sampl": [5, 6], "temperatur": 5, "time": 5, "locat": [5, 14], "random": 5, "rand": 5, "5": [5, 6, 8], "pressur": [5, 14], "coord": 5, "date_rang": 5, "2022": 5, "01": 5, "period": 5, "A": [5, 8, 10], "b": [5, 8, 14], "c": 5, "df": [5, 6], "humid": [5, 6], "4": [5, 6, 8], "6": [5, 6, 8], "7": [5, 6, 8], "wind_spe": [5, 6], "10": [5, 8, 10], "12": 5, "15": 5, "11": [5, 8], "index": [5, 15], "updated_d": 5, "datetime64": 5, "n": 5, "02": 5, "05": 5, "object": [5, 10, 12], "float64": [5, 8, 12], "6453": 5, "8361": 5, "6811": 5, "9784": 5, "6114": 5, "6046": 5, "int64": 5, "linspac": [5, 8], "50": [5, 8], "pixel": 5, "each": [5, 10], "side": 5, "middle_d": 5, "778": 5, "333": 5, "889": 5, "444": 5, "667": 5, "222": 5, "278": 5, "8333": 5, "389": 5, "944": 5, "root_dir": 5, "within": 5, "specifi": [5, 8, 10], "root": 5, "directori": [5, 10], "paramet": [5, 6, 8, 10, 12], "The": [5, 6, 8, 10, 12, 14, 16], "where": [5, 10], "ar": [5, 10, 14], "type": [5, 6, 8, 10, 12, 15], "pathlib": 5, "list": [5, 6, 10, 14], "get": [5, 8, 15], "num_pixel": 5, "int": [5, 6, 8, 10], "middle_x_index": 5, "middle_y_index": 5, "number": [5, 8, 10, 12, 14], "includ": [5, 14], "If": [5, 8, 10, 12, 14, 16], "calcul": 5, "comput": [6, 8], "coher": [6, 7, 8], "measur": [6, 8], "tensorflow": [6, 7, 8, 10], "popular": [6, 8], "deep": [6, 8], "learn": [6, 8], "framework": [6, 8], "create_model_input_output": 6, "output": [6, 10], "dict": [6, 8, 10], "tupl": 6, "input": [6, 8, 10], "z_repeat": 6, "z0_tensor": 6, "dictionari": [6, 8, 10], "column": 6, "name": [6, 10, 14], "kei": 6, "geo_kz_ml": 6, "geo_thetainc_ml": 6, "geo_amp": 6, "geo_coh": 6, "geo_pha": 6, "output_dict": 6, "output1": 6, "output2": 6, "coherenceicemodel": 6, "estim": [6, 7, 8], "ic": 6, "base": [6, 8, 10, 14], "d_pen_input": 6, "tensor": [6, 8, 10], "d_pen": [6, 8], "tf": [6, 8, 10], "output_profil": 6, "uniformvolumelay": [6, 8], "model_uv": 6, "uniform": [6, 8], "volum": [6, 8], "kera": [6, 8, 10], "kappa_z_input": 6, "kappa_z": [6, 8], "kappa_z_vol_input": 6, "kappa_z_vol": [6, 8], "z0_input": 6, "z0": [6, 8], "combined_input": 6, "combin": 6, "inputscohmodel": 6, "coh_est": 6, "complexcoherenceestimatorlay": [6, 8], "complet": 6, "create_uv_model": 6, "create_coherence_model": 6, "plot_model": 6, "architectur": 6, "instanc": 6, "ice_model": 6, "build": [7, 14], "sar": 7, "ad": 8, "advanc": 8, "integratesimpsonsrul": 8, "func": 8, "callabl": 8, "num_interv": 8, "1000": 8, "kwarg": [8, 10], "ani": [8, 10, 14], "numer": 8, "integr": 8, "function": [8, 14], "simpson": 8, "": [8, 10, 14], "rule": 8, "method": [8, 10, 16], "interv": 8, "default": [8, 10, 12, 14], "keyword": 8, "argument": 8, "addit": [8, 14], "approxim": 8, "given": [8, 14], "rais": 8, "valueerror": 8, "i": [8, 12, 14, 16], "posit": 8, "def": 8, "sin": 8, "constant": [8, 10], "pi": 8, "result": 8, "shape": 8, "dtype": 8, "call": 8, "perform": 8, "limit": 8, "over": 8, "integratediscretesimpsonsrul": 8, "discret": 8, "x_valu": 8, "y_valu": 8, "3333335": 8, "valu": [8, 10, 12], "point": [8, 12], "complexintegratediscretesimpsonsrul": 8, "complex": [8, 12], "j": 8, "complex64": [8, 12], "z_valu": 8, "func_z_valu": 8, "expect": 8, "format": 8, "5934472": 8, "67985195j": 8, "integrand_num": 8, "z": [8, 12], "f": 8, "defin": [8, 10], "integrand": 8, "gamma": 8, "integrand_den": 8, "denomin": 8, "phaseestimationlay": 8, "phase": 8, "angl": 8, "1j": 8, "78539816": 8, "35619449": 8, "amplitudeestimationlay": 8, "amplitud": 8, "4142135": 8, "phasecenterdepthestimationlay": 8, "center": 8, "depth": 8, "5j": 8, "853982": 8, "23": 8, "561945": 8, "estimatekappaelay": 8, "kappa_": 8, "theta_r": 8, "9800678": 8, "uvlay": 8, "uv": 8, "m1": 8, "5205099": 8, "130252": 8, "field": 8, "2214028": 8, "4918247": 8, "weibulllay": 8, "weibul": 8, "distribut": 8, "lambda_w": 8, "k_w": 8, "19800997": 8, "0234487": 8, "linspacelay": 8, "linearli": 8, "space": 8, "vector": 8, "between": [8, 12], "two": 8, "start": [8, 15], "end": [8, 10], "integ": 8, "unus": 8, "betweenconstraint": 8, "min_valu": 8, "float": 8, "max_valu": 8, "constraint": 8, "constrain": 8, "weight": 8, "minimum": 8, "maximum": 8, "clip": 8, "allow": [8, 14], "25": 8, "60": 8, "constrained_weight": 8, "__call__": 8, "w": 8, "get_config": 8, "configur": [8, 14], "absolutevaluelay": 8, "absolut": 8, "element": 8, "wise": 8, "input_tensor": 8, "output_tensor": 8, "sever": 10, "dure": [10, 11], "visual": 10, "log": 10, "printlayervaluescallback": 10, "specif": 10, "epoch": 10, "plotlayerimagecallback": 10, "save": 10, "imag": 10, "logfigurescallback": 10, "figur": [10, 12], "plot_to_imag": 10, "convert": 10, "matplotlib": [10, 12], "depend": [10, 14], "pyplot": 10, "datetim": 10, "plt": 10, "logdir": 10, "now": [10, 14], "strftime": 10, "h": 10, "basic": 10, "tensorboard": 10, "tensorboard_callback": 10, "log_dir": 10, "file_writer_figur": 10, "summari": 10, "create_file_writ": 10, "fit": 10, "x_train": 10, "y_train": 10, "layer_nam": 10, "obtain": 10, "whose": 10, "print_callback": 10, "on_epoch_end": 10, "current": 10, "metric": 10, "save_path": 10, "layer_imag": 10, "filewrit": 10, "write": 10, "fig": 10, "png": 10, "repres": 10, "some": 11, "handi": 11, "like": [11, 12], "plot_x_i": 12, "ndarrai": 12, "label": 12, "ax": 12, "relationship": 12, "arrai": 12, "line": 12, "axi": 12, "plot_complex_polar": 12, "complex128": 12, "polar": 12, "complex_numb": 12, "In": 14, "order": 14, "abl": 14, "understand": 14, "project": [14, 17], "layout": 14, "flat": 14, "which": 14, "mean": 14, "packag": [14, 16], "code": 14, "my": 14, "inform": 14, "check": 14, "offici": 14, "en": 14, "latest": 14, "discuss": 14, "src": 14, "v": 14, "should": 14, "know": 14, "our": 14, "we": 14, "poetri": [14, 16], "tool": 14, "simplifi": 14, "process": [14, 16], "publish": 14, "It": 14, "u": 14, "easili": 14, "virtual": 14, "environ": 14, "also": 14, "resolut": 14, "lock": 14, "pypi": 14, "overal": 14, "streamlin": 14, "make": 14, "easier": 14, "share": 14, "other": 14, "welcom": 14, "thei": 14, "greatli": 14, "appreci": 14, "everi": 14, "littl": 14, "bit": 14, "help": 14, "credit": [14, 15], "alwai": [14, 16], "can": [14, 16], "mani": 14, "wai": 14, "issu": 14, "pleas": 14, "oper": 14, "system": 14, "detail": 14, "about": 14, "local": 14, "setup": 14, "might": 14, "troubleshoot": 14, "step": 14, "reproduc": 14, "look": 14, "through": [14, 16], "github": [14, 16, 17], "anyth": 14, "tag": 14, "want": 14, "open": 14, "whoever": 14, "enhanc": 14, "could": 14, "whether": 14, "part": 14, "docstr": 14, "even": 14, "web": 14, "blog": 14, "post": 14, "articl": 14, "best": 14, "send": 14, "propos": 14, "explain": 14, "how": 14, "would": 14, "work": 14, "keep": 14, "scope": 14, "narrow": 14, "possibl": 14, "rememb": 14, "volunt": 14, "driven": 14, "readi": 14, "set": 14, "up": 14, "develop": 14, "fork": 14, "repo": [14, 16], "clone": [14, 16], "git": [14, 16], "your_name_her": 14, "instal": [14, 15], "copi": [14, 16], "virtualenv": 14, "assum": 14, "have": [14, 16], "virtualenvwrapp": 14, "mkvirtualenv": 14, "cd": 14, "py": 14, "branch": 14, "checkout": 14, "bugfix": 14, "chang": 14, "when": 14, "re": 14, "done": 14, "pass": 14, "flake8": 14, "test": 14, "tox": 14, "lint": 14, "To": [14, 16], "just": 14, "pip": [14, 16], "them": 14, "push": 14, "add": 14, "descript": 14, "websit": 14, "befor": 14, "meet": 14, "put": 14, "readm": 14, "rst": 14, "run": [14, 16], "subset": 14, "pytest": 14, "test_pydeepsar": 14, "semant": 14, "cut": 14, "determin": 14, "consum": 14, "impact": 14, "codebas": 14, "follow": 14, "formal": 14, "convent": 14, "automat": 14, "next": 14, "changelog": 14, "By": 14, "angular": 14, "preset": 14, "config": 14, "options_": 14, "analyz": 14, "note": [14, 15], "plugin": 14, "commitizen": 14, "commitlint": 14, "contributor": 14, "enforc": 14, "valid": 14, "tabl": 14, "below": 14, "show": 14, "pencil": 14, "stop": 14, "graphit": 14, "break": 14, "appli": 14, "feat": 14, "graphitewidth": 14, "perf": 14, "remov": 14, "chore": 14, "ha": 14, "been": 14, "sourc": [14, 15], "As": 14, "squash": 14, "merg": 14, "strategi": 14, "ensur": 14, "pr": 14, "titl": 14, "introduct": 15, "featur": 15, "stabl": 15, "releas": 15, "api": 15, "refer": 15, "contribut": 15, "pull": 15, "request": 15, "guidelin": 15, "tip": 15, "search": 15, "termin": 16, "prefer": 16, "most": 16, "recent": 16, "don": 16, "t": 16, "guid": 16, "download": 16, "either": 16, "public": [16, 17], "repositori": 16, "islamalam": [16, 17], "Or": 16, "tarbal": 16, "curl": 16, "ojl": 16, "onc": 16, "aim": 17, "free": 17, "softwar": 17, "gnu": 17, "licens": 17, "v3": 17, "tbd": 17, "wa": 17, "scicooki": 17, "templat": 17}, "objects": {"": [[3, 0, 0, "-", "pydeepsar"]], "pydeepsar": [[3, 1, 1, "", "__author__"], [3, 1, 1, "", "__email__"], [1, 0, 0, "-", "__main__"], [3, 1, 1, "", "__version__"], [2, 0, 0, "-", "cli"], [3, 2, 1, "", "get_version"], [4, 0, 0, "-", "io"], [7, 0, 0, "-", "models"], [9, 0, 0, "-", "pydeepsar"], [11, 0, 0, "-", "util"], [3, 1, 1, "", "version"]], "pydeepsar.cli": [[2, 2, 1, "", "main"]], "pydeepsar.io": [[5, 0, 0, "-", "xr"]], "pydeepsar.io.xr": [[5, 3, 1, "", "GeoNetCDFDataReader"], [5, 3, 1, "", "TandemXData"], [5, 2, 1, "", "slice_middle_portion"], [5, 2, 1, "", "update_dataset_with_dataframe"]], "pydeepsar.io.xr.GeoNetCDFDataReader": [[5, 4, 1, "", "netcdf_file"], [5, 5, 1, "", "read_netcdf"]], "pydeepsar.io.xr.TandemXData": [[5, 4, 1, "", "dem_files"], [5, 5, 1, "", "get_dem_files"], [5, 4, 1, "", "root_dir"]], "pydeepsar.models": [[6, 0, 0, "-", "coherene"], [8, 0, 0, "-", "layers"]], "pydeepsar.models.coherene": [[6, 3, 1, "", "CoherenceIceModel"], [6, 2, 1, "", "create_model_input_output"]], "pydeepsar.models.coherene.CoherenceIceModel": [[6, 4, 1, "", "coh_est"], [6, 4, 1, "", "combined_input"], [6, 5, 1, "id0", "create_UV_model"], [6, 5, 1, "id1", "create_coherence_model"], [6, 4, 1, "", "d_pen_input"], [6, 4, 1, "", "inputsCohModel"], [6, 4, 1, "", "kappa_z_input"], [6, 4, 1, "", "kappa_z_vol_input"], [6, 4, 1, "", "model"], [6, 4, 1, "", "model_UV"], [6, 4, 1, "", "output_Profile"], [6, 5, 1, "id2", "plot_model"], [6, 4, 1, "", "z0_input"]], "pydeepsar.models.layers": [[8, 3, 1, "", "AbsoluteValueLayer"], [8, 3, 1, "", "AmplitudeEstimationLayer"], [8, 3, 1, "", "BetweenConstraint"], [8, 3, 1, "", "ComplexCoherenceEstimatorLayer"], [8, 3, 1, "", "ComplexIntegrateDiscreteSimpsonsRule"], [8, 3, 1, "", "EstimateKappaELayer"], [8, 3, 1, "", "IntegrateDiscreteSimpsonsRule"], [8, 3, 1, "", "IntegrateSimpsonsRule"], [8, 3, 1, "", "LinspaceLayer"], [8, 3, 1, "", "PhaseCenterDepthEstimationLayer"], [8, 3, 1, "", "PhaseEstimationLayer"], [8, 3, 1, "", "UVLayer"], [8, 3, 1, "", "UniformVolumeLayer"], [8, 3, 1, "", "WeibullLayer"]], "pydeepsar.models.layers.AbsoluteValueLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.AmplitudeEstimationLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.BetweenConstraint": [[8, 5, 1, "", "__call__"], [8, 5, 1, "", "get_config"]], "pydeepsar.models.layers.ComplexCoherenceEstimatorLayer": [[8, 5, 1, "", "call"], [8, 5, 1, "", "integrand_den"], [8, 5, 1, "", "integrand_num"]], "pydeepsar.models.layers.ComplexIntegrateDiscreteSimpsonsRule": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.EstimateKappaELayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.IntegrateDiscreteSimpsonsRule": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.IntegrateSimpsonsRule": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.LinspaceLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.PhaseCenterDepthEstimationLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.PhaseEstimationLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.UVLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.UniformVolumeLayer": [[8, 5, 1, "", "call"]], "pydeepsar.models.layers.WeibullLayer": [[8, 5, 1, "", "call"]], "pydeepsar.util": [[10, 0, 0, "-", "callback"], [12, 0, 0, "-", "plot"]], "pydeepsar.util.callback": [[10, 3, 1, "", "LogFiguresCallback"], [10, 3, 1, "", "PlotLayerImageCallback"], [10, 3, 1, "", "PrintLayerValuesCallback"], [10, 2, 1, "", "plot_to_image"]], "pydeepsar.util.callback.LogFiguresCallback": [[10, 5, 1, "", "on_epoch_end"]], "pydeepsar.util.callback.PlotLayerImageCallback": [[10, 5, 1, "", "on_epoch_end"]], "pydeepsar.util.callback.PrintLayerValuesCallback": [[10, 5, 1, "", "on_epoch_end"]], "pydeepsar.util.plot": [[12, 2, 1, "", "plot_complex_polar"], [12, 2, 1, "", "plot_x_y"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "pydeepsar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "__main__": 1, "cli": 2, "modul": [2, 5, 6, 8, 10, 12], "content": [2, 3, 5, 6, 8, 10, 12, 15], "function": [2, 3, 5, 6, 10, 12], "subpackag": 3, "submodul": [3, 4, 7, 11], "packag": [3, 15, 17], "attribut": 3, "io": [4, 5], "xr": 5, "class": [5, 6, 8, 10], "model": [6, 7, 8], "coheren": 6, "layer": 8, "util": [10, 11, 12], "callback": 10, "plot": 12, "releas": [13, 14, 16], "note": 13, "contribut": 14, "type": 14, "report": 14, "bug": 14, "fix": 14, "implement": 14, "featur": [14, 17], "write": 14, "document": [14, 15], "submit": 14, "feedback": 14, "get": 14, "start": 14, "pull": 14, "request": 14, "guidelin": 14, "tip": 14, "commit": 14, "messag": 14, "format": 14, "welcom": 15, "deepsar": [15, 17], "python": [15, 17], "": 15, "indic": 15, "tabl": 15, "instal": 16, "stabl": 16, "from": 16, "sourc": 16, "credit": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "pydeepsar.__main__": [[1, "module-pydeepsar.__main__"]], "pydeepsar.cli": [[2, "module-pydeepsar.cli"]], "Module Contents": [[2, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [12, "module-contents"]], "Functions": [[2, "functions"], [3, "functions"], [5, "functions"], [6, "functions"], [10, "functions"], [12, "functions"]], "pydeepsar": [[3, "module-pydeepsar"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [4, "submodules"], [7, "submodules"], [11, "submodules"]], "Package Contents": [[3, "package-contents"]], "Attributes": [[3, "attributes"]], "pydeepsar.io": [[4, "module-pydeepsar.io"]], "pydeepsar.io.xr": [[5, "module-pydeepsar.io.xr"]], "Classes": [[5, "classes"], [6, "classes"], [8, "classes"], [10, "classes"]], "pydeepsar.models.coherene": [[6, "module-pydeepsar.models.coherene"]], "pydeepsar.models": [[7, "module-pydeepsar.models"]], "pydeepsar.models.layers": [[8, "module-pydeepsar.models.layers"]], "pydeepsar.pydeepsar": [[9, "module-pydeepsar.pydeepsar"]], "pydeepsar.util.callback": [[10, "module-pydeepsar.util.callback"]], "pydeepsar.util": [[11, "module-pydeepsar.util"]], "pydeepsar.util.plot": [[12, "module-pydeepsar.util.plot"]], "Release Notes": [[13, "release-notes"]], "Contributing": [[14, "contributing"]], "Types of Contributions": [[14, "types-of-contributions"]], "Report Bugs": [[14, "report-bugs"]], "Fix Bugs": [[14, "fix-bugs"]], "Implement Features": [[14, "implement-features"]], "Write Documentation": [[14, "write-documentation"]], "Submit Feedback": [[14, "submit-feedback"]], "Get Started": [[14, "get-started"]], "Pull Request Guidelines": [[14, "pull-request-guidelines"]], "Tips": [[14, "tips"]], "Release": [[14, "release"]], "Commit message format": [[14, "commit-message-format"]], "Welcome to DeepSAR Python package\u2019s documentation!": [[15, "welcome-to-deepsar-python-package-s-documentation"]], "Contents:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "Installation": [[16, "installation"]], "Stable release": [[16, "stable-release"]], "From sources": [[16, "from-sources"]], "DeepSAR Python package": [[17, "deepsar-python-package"]], "Features": [[17, "features"]], "Credits": [[17, "credits"]]}, "indexentries": {"module": [[1, "module-pydeepsar.__main__"], [2, "module-pydeepsar.cli"], [3, "module-pydeepsar"], [4, "module-pydeepsar.io"], [5, "module-pydeepsar.io.xr"], [6, "module-pydeepsar.models.coherene"], [7, "module-pydeepsar.models"], [8, "module-pydeepsar.models.layers"], [9, "module-pydeepsar.pydeepsar"], [10, "module-pydeepsar.util.callback"], [11, "module-pydeepsar.util"], [12, "module-pydeepsar.util.plot"]], "pydeepsar.__main__": [[1, "module-pydeepsar.__main__"]], "main() (in module pydeepsar.cli)": [[2, "pydeepsar.cli.main"]], "pydeepsar.cli": [[2, "module-pydeepsar.cli"]], "__author__ (in module pydeepsar)": [[3, "pydeepsar.__author__"]], "__email__ (in module pydeepsar)": [[3, "pydeepsar.__email__"]], "__version__ (in module pydeepsar)": [[3, "pydeepsar.__version__"]], "get_version() (in module pydeepsar)": [[3, "pydeepsar.get_version"]], "pydeepsar": [[3, "module-pydeepsar"]], "version (in module pydeepsar)": [[3, "pydeepsar.version"]], "pydeepsar.io": [[4, "module-pydeepsar.io"]], "geonetcdfdatareader (class in pydeepsar.io.xr)": [[5, "pydeepsar.io.xr.GeoNetCDFDataReader"]], "tandemxdata (class in pydeepsar.io.xr)": [[5, "pydeepsar.io.xr.TandemXData"]], "dem_files (pydeepsar.io.xr.tandemxdata attribute)": [[5, "pydeepsar.io.xr.TandemXData.dem_files"]], "get_dem_files() (pydeepsar.io.xr.tandemxdata method)": [[5, "pydeepsar.io.xr.TandemXData.get_dem_files"]], "netcdf_file (pydeepsar.io.xr.geonetcdfdatareader attribute)": [[5, "pydeepsar.io.xr.GeoNetCDFDataReader.netcdf_file"]], "pydeepsar.io.xr": [[5, "module-pydeepsar.io.xr"]], "read_netcdf() (pydeepsar.io.xr.geonetcdfdatareader method)": [[5, "pydeepsar.io.xr.GeoNetCDFDataReader.read_netcdf"]], "root_dir (pydeepsar.io.xr.tandemxdata attribute)": [[5, "pydeepsar.io.xr.TandemXData.root_dir"]], "slice_middle_portion() (in module pydeepsar.io.xr)": [[5, "pydeepsar.io.xr.slice_middle_portion"]], "update_dataset_with_dataframe() (in module pydeepsar.io.xr)": [[5, "pydeepsar.io.xr.update_dataset_with_dataframe"]], "coherenceicemodel (class in pydeepsar.models.coherene)": [[6, "pydeepsar.models.coherene.CoherenceIceModel"]], "coh_est (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.coh_est"]], "combined_input (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.combined_input"]], "create_uv_model() (pydeepsar.models.coherene.coherenceicemodel method)": [[6, "id0"], [6, "pydeepsar.models.coherene.CoherenceIceModel.create_UV_model"]], "create_coherence_model() (pydeepsar.models.coherene.coherenceicemodel method)": [[6, "id1"], [6, "pydeepsar.models.coherene.CoherenceIceModel.create_coherence_model"]], "create_model_input_output() (in module pydeepsar.models.coherene)": [[6, "pydeepsar.models.coherene.create_model_input_output"]], "d_pen_input (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.d_pen_input"]], "inputscohmodel (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.inputsCohModel"]], "kappa_z_input (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.kappa_z_input"]], "kappa_z_vol_input (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.kappa_z_vol_input"]], "model (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.model"]], "model_uv (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.model_UV"]], "output_profile (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.output_Profile"]], "plot_model() (pydeepsar.models.coherene.coherenceicemodel method)": [[6, "id2"], [6, "pydeepsar.models.coherene.CoherenceIceModel.plot_model"]], "pydeepsar.models.coherene": [[6, "module-pydeepsar.models.coherene"]], "z0_input (pydeepsar.models.coherene.coherenceicemodel attribute)": [[6, "pydeepsar.models.coherene.CoherenceIceModel.z0_input"]], "pydeepsar.models": [[7, "module-pydeepsar.models"]], "absolutevaluelayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.AbsoluteValueLayer"]], "amplitudeestimationlayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.AmplitudeEstimationLayer"]], "betweenconstraint (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.BetweenConstraint"]], "complexcoherenceestimatorlayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.ComplexCoherenceEstimatorLayer"]], "complexintegratediscretesimpsonsrule (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.ComplexIntegrateDiscreteSimpsonsRule"]], "estimatekappaelayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.EstimateKappaELayer"]], "integratediscretesimpsonsrule (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.IntegrateDiscreteSimpsonsRule"]], "integratesimpsonsrule (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.IntegrateSimpsonsRule"]], "linspacelayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.LinspaceLayer"]], "phasecenterdepthestimationlayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.PhaseCenterDepthEstimationLayer"]], "phaseestimationlayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.PhaseEstimationLayer"]], "uvlayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.UVLayer"]], "uniformvolumelayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.UniformVolumeLayer"]], "weibulllayer (class in pydeepsar.models.layers)": [[8, "pydeepsar.models.layers.WeibullLayer"]], "__call__() (pydeepsar.models.layers.betweenconstraint method)": [[8, "pydeepsar.models.layers.BetweenConstraint.__call__"]], "call() (pydeepsar.models.layers.absolutevaluelayer method)": [[8, "pydeepsar.models.layers.AbsoluteValueLayer.call"]], "call() (pydeepsar.models.layers.amplitudeestimationlayer method)": [[8, "pydeepsar.models.layers.AmplitudeEstimationLayer.call"]], "call() (pydeepsar.models.layers.complexcoherenceestimatorlayer method)": [[8, "pydeepsar.models.layers.ComplexCoherenceEstimatorLayer.call"]], "call() (pydeepsar.models.layers.complexintegratediscretesimpsonsrule method)": [[8, "pydeepsar.models.layers.ComplexIntegrateDiscreteSimpsonsRule.call"]], "call() (pydeepsar.models.layers.estimatekappaelayer method)": [[8, "pydeepsar.models.layers.EstimateKappaELayer.call"]], "call() (pydeepsar.models.layers.integratediscretesimpsonsrule method)": [[8, "pydeepsar.models.layers.IntegrateDiscreteSimpsonsRule.call"]], "call() (pydeepsar.models.layers.integratesimpsonsrule method)": [[8, "pydeepsar.models.layers.IntegrateSimpsonsRule.call"]], "call() (pydeepsar.models.layers.linspacelayer method)": [[8, "pydeepsar.models.layers.LinspaceLayer.call"]], "call() (pydeepsar.models.layers.phasecenterdepthestimationlayer method)": [[8, "pydeepsar.models.layers.PhaseCenterDepthEstimationLayer.call"]], "call() (pydeepsar.models.layers.phaseestimationlayer method)": [[8, "pydeepsar.models.layers.PhaseEstimationLayer.call"]], "call() (pydeepsar.models.layers.uvlayer method)": [[8, "pydeepsar.models.layers.UVLayer.call"]], "call() (pydeepsar.models.layers.uniformvolumelayer method)": [[8, "pydeepsar.models.layers.UniformVolumeLayer.call"]], "call() (pydeepsar.models.layers.weibulllayer method)": [[8, "pydeepsar.models.layers.WeibullLayer.call"]], "get_config() (pydeepsar.models.layers.betweenconstraint method)": [[8, "pydeepsar.models.layers.BetweenConstraint.get_config"]], "integrand_den() (pydeepsar.models.layers.complexcoherenceestimatorlayer method)": [[8, "pydeepsar.models.layers.ComplexCoherenceEstimatorLayer.integrand_den"]], "integrand_num() (pydeepsar.models.layers.complexcoherenceestimatorlayer method)": [[8, "pydeepsar.models.layers.ComplexCoherenceEstimatorLayer.integrand_num"]], "pydeepsar.models.layers": [[8, "module-pydeepsar.models.layers"]], "pydeepsar.pydeepsar": [[9, "module-pydeepsar.pydeepsar"]], "logfigurescallback (class in pydeepsar.util.callback)": [[10, "pydeepsar.util.callback.LogFiguresCallback"]], "plotlayerimagecallback (class in pydeepsar.util.callback)": [[10, "pydeepsar.util.callback.PlotLayerImageCallback"]], "printlayervaluescallback (class in pydeepsar.util.callback)": [[10, "pydeepsar.util.callback.PrintLayerValuesCallback"]], "on_epoch_end() (pydeepsar.util.callback.logfigurescallback method)": [[10, "pydeepsar.util.callback.LogFiguresCallback.on_epoch_end"]], "on_epoch_end() (pydeepsar.util.callback.plotlayerimagecallback method)": [[10, "pydeepsar.util.callback.PlotLayerImageCallback.on_epoch_end"]], "on_epoch_end() (pydeepsar.util.callback.printlayervaluescallback method)": [[10, "pydeepsar.util.callback.PrintLayerValuesCallback.on_epoch_end"]], "plot_to_image() (in module pydeepsar.util.callback)": [[10, "pydeepsar.util.callback.plot_to_image"]], "pydeepsar.util.callback": [[10, "module-pydeepsar.util.callback"]], "pydeepsar.util": [[11, "module-pydeepsar.util"]], "plot_complex_polar() (in module pydeepsar.util.plot)": [[12, "pydeepsar.util.plot.plot_complex_polar"]], "plot_x_y() (in module pydeepsar.util.plot)": [[12, "pydeepsar.util.plot.plot_x_y"]], "pydeepsar.util.plot": [[12, "module-pydeepsar.util.plot"]]}})